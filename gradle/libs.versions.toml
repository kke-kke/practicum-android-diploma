[versions]
java = "VERSION_1_8"

androidXNavigation = "2.8.4"
appcompat = "1.6.1"
constraintlayout = "2.1.4"
coreKtx = "1.13.1"
espressoCore = "3.5.1"
fragmentKtx = "1.6.2"
glide = "4.16.0"
gson = "2.10.1"
junit = "4.13.2"
junitVersion = "1.1.5"
koinAndroid = "3.5.6"
kotlin = "1.9.24"
kotlinxCoroutinesAndroid = "1.9.0"
lifecycleViewmodelKtx = "2.7.0"
material = "1.12.0"
okhttp = "4.11.0"
peko = "3.0.5"
retrofit = "2.9.0"
room = "2.6.1"

# Build constants
minSdk = "26"
compileSdk = "34"
targetSdk = "33"

# Detekt
detekt = "1.23.3"
detektTwitterComposeRules ="0.0.26"

[libraries]

# Detekt
staticAnalysis-detektPlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
staticAnalysis-detektCli = { module = "io.gitlab.arturbosch.detekt:detekt-cli", version.ref = "detekt" }
staticAnalysis-detektApi = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt" }
staticAnalysis-detektTest = { module = "io.gitlab.arturbosch.detekt:detekt-test", version.ref = "detekt" }
staticAnalysis-detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
staticAnalysis-detektLibraries = { module = "io.gitlab.arturbosch.detekt:detekt-rules-libraries", version.ref = "detekt" }
staticAnalysis-detektTwitterComposeRules = { module = "com.twitter.compose.rules:detekt", version.ref = "detektTwitterComposeRules" }

# AndroidX
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidX-room = { module = "androidx.room:room-ktx", version.ref = "room"}
androidX-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidX-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
androidX-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidXNavigation" }
androidX-navigation-ui-ktx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidXNavigation" }
fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragmentKtx" }

kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# KotlinX
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }

# UI layer libraries
material = { module = "com.google.android.material:material", version.ref = "material" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }

# Tools libraries
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinAndroid" }
peko = { module = "com.markodevcic:peko", version.ref = "peko" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# Unit tests
junit = { module = "junit:junit", version.ref = "junit" }

# UI tests
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
ext-junit = { module = "androidx.test.ext:junit", version.ref = "junitVersion" }

[bundles]
